version: '1.0.{build}'
image:
- Visual Studio 2017
- Visual Studio 2019

platform: Any CPU
init:
- cmd: bash -c 'time echo "Hello from BASH $(bash --version)"'
- ps: |
     function Get-Elapsed
     {
         if ($Global:startAt -eq $null) { $Global:startAt = [System.Diagnostics.Stopwatch]::StartNew(); }
         # $time = new-object System.DateTime(0); $elapsed = [System.String]::Concat("[", $time.AddMilliseconds($Global:startAt.ElapsedMilliseconds).ToString("HH:mm:ss"), "]");
         # $elapsed
         [System.String]::Concat("[", (new-object System.DateTime(0)).AddMilliseconds($Global:startAt.ElapsedMilliseconds).ToString("HH:mm:ss"), "]");
     }; $_=Get-Elapsed;

- ps: |
    "$(Get-Elapsed) Configure local Routing"
    Set-Service RemoteAccess -StartupType Manual
    Start-Service RemoteAccess
    "$(Get-Elapsed) Configure Net TCP Port Sharing"
    Set-Service NetTcpPortSharing -StartupType Manual
    Start-Service NetTcpPortSharing
- ps: | 
        netsh advfirewall firewall add rule name="All ICMP V4" protocol=icmpv4:any,any dir=in action=allow
        netsh advfirewall firewall add rule name="Open Port 1433 (SQL Servers)" dir=in action=allow protocol=TCP localport=1433


before_build:
- ps: $Env:ARTIFACT = "$($Env:APPVEYOR_BUILD_FOLDER)\Artifact"; New-Item -ItemType Directory -Path $Env:ARTIFACT; # "Hi" >Artifact\hi.txt
- ps: Start-Transcript "Artifact\Build.log" -Force
- git submodule update --init --recursive
- ps: |
    # disable preinstalled SQL Servers
    $names = @();
    foreach($path in @('HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server', 'HKLM:\SOFTWARE\WOW6432Node\Microsoft\Microsoft SQL Server')) {
        try { $v = (get-itemproperty $path).InstalledInstances; $names += $v } catch {}
    }

    [System.Array]::Sort($names);
    $info=""; foreach($name in $names) { $info += " [$name]"; } Write-Host "Sql Servers: $info";
    foreach($sqlname in $names) {
        if ($sqlname.Length -eq 0) { continue; }
        "$(Get-Elapsed) Disable MSSQL`$$sqlname"
        Set-Service "MSSQL`$$sqlname" -StartupType Disabled
        & cmd /c sc delete "MSSQL`$$sqlname"
    }
    get-wmiobject win32_service | where {$_.Name.ToLower().IndexOf("sql") -ge 0 } | sort-object -Property "DisplayName" | ft Name, DisplayName, StartMode, State

- ps: | 
        # Install new SQL Servers
        "ARTIFACT folder: $($Env:ARTIFACT)"
        pushd SQL-Express; 

        "$(Get-Elapsed) Installing SQL Express 2017"
        & .\SQL-Express-2017-Updated.cmd     2>&1 >$Env:ARTIFACT\SQL-Express-2017-Updated.log
        
        "$(Get-Elapsed) Installing SQL Express 2014 SP2"
        & .\SQL-Express-2014-SP2-x86.cmd     2>&1 >$Env:ARTIFACT\SQL-Express-2014-SP2-x86.log
        
        "$(Get-Elapsed) Installing SQL Express 2012 SP3"
        & .\SQL-Express-2012-SP3.cmd         2>&1 >$Env:ARTIFACT\SQL-Express-2012-SP3.log
        
        "$(Get-Elapsed) Installing SQL Express 2008 R2 SP2 (x86)"
        & .\SQL-Express-2008-R2-SP2-x86.cmd  2>&1 >$Env:ARTIFACT\SQL-Express-2008-R2-SP2-x86.log
        "$(Get-Elapsed) Done. SQL Services are:"

        popd
        get-wmiobject win32_service | where {$_.Name.ToLower().IndexOf("sql") -ge 0 } | sort-object -Property "DisplayName" | ft Name, DisplayName, StartMode, State

build_script:
- ps: | 
      & .\build-and-test.cmd

after_test:
- ps: Stop-Transcript
artifacts:
  - path: Artifact
